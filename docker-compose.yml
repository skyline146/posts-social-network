services:
  db:
    image: postgres
    container_name: postgres_db
    restart: always
    env_file:
      - /packages/database/.env
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=posts-app-db
    volumes:
      - ./packages/database/pgdata:/var/lib/postgresql/data
    ports:
      - '5432:5432'

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: pgadmin4
    env_file:
      - /packages/database/.env
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - '5050:80'
    depends_on:
      - db

  # api:
  #   build:
  #     context: ./apps/api
  #     dockerfile: Dockerfile
  #     target: production
  #   container_name: api
  #   restart: always
  #   env_file:
  #     - ./apps/api/.env
  #   ports:
  #     - '${PORT}:${PORT}'
  #   depends_on:
  #     - db
  #   volumes:
  #     - ./apps/api/src:/api/src

  # posts-web-app:
  #   build:
  #     context: ./apps/web
  #     dockerfile: Dockerfile
  #   container_name: posts-web-app
  #   env_file:
  #     - ./apps/posts-web/.env
  #   ports:
  #     - '${PORT}:${PORT}'
  #   volumes:
  #     - ./apps/posts-web/src:/posts-web-app/src

  # admin-panel:
  #   build:
  #     context: ./apps/admin-panel
  #     dockerfile: Dockerfile
  #   container_name: admin-panel
  #   ports:
  #     - '3001:3001'
  #   volumes:
  #     - ../v2hx-frontend/src:/frontend/src
  #     - ../v2hx-frontend/public/features.json:/frontend/dist/features.json
  #     - ../v2hx-frontend/public/robots.txt:/frontend/dist/robots.txt
  #     - ../v2hx-frontend/public/sitemap.xml:/frontend/dist/sitemap.xml
